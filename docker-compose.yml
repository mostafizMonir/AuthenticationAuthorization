services:
  milanauth:
    image: ${DOCKER_REGISTRY-}milanauth
    build:
      context: .
      dockerfile: MilanAuth/Dockerfile
    depends_on:
      - postgres
     # - keycloak
    ports:
      - "7002:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: milanauth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5456:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-keycloak.sql:/docker-entrypoint-initdb.d/init-keycloak.sql 

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    depends_on:
      - postgres
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/milanauth?currentSchema=keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
      KC_DB_SCHEMA: keycloak  # Explicit schema declaration (optional but recommended)
    ports:
      - "8080:8080"
    command: ["start-dev"]

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - milanauth

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  postgres_data:
